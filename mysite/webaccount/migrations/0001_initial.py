# Generated by Django 2.2.12 on 2020-04-25 01:57

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import webaccount.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Client_Personal_Info',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(error_messages={'blank': 'Name field is empty.', 'null': 'Name field is empty.'}, max_length=300, verbose_name='Name')),
                ('Email', models.EmailField(error_messages={'blank': 'Email field is empty.', 'null': 'Email field is empty.', 'unique': 'Already exists.'}, max_length=300, unique=True, verbose_name='Email')),
                ('Phone_Number', models.CharField(error_messages={'blank': 'Phone Number is required.', 'null': 'Phone Number is required.', 'unique': 'Already exists.'}, max_length=10, unique=True, validators=[webaccount.models.phoneNumberValidator], verbose_name='Phone Number')),
                ('company_name', models.CharField(error_messages={'blank': 'Company name is required.', 'null': 'Company name is required.'}, max_length=300, verbose_name='Company Name')),
                ('CR', models.CharField(error_messages={'blank': 'CR is required.', 'null': 'CR is required.', 'unique': 'Already exists.'}, max_length=10, unique=True, validators=[webaccount.models.convertToInteger], verbose_name='CR')),
                ('location', models.CharField(error_messages={'blank': 'locationlocation is required.', 'null': 'location is required.'}, max_length=300, verbose_name='Location')),
                ('contact_number', models.CharField(error_messages={'blank': 'location is required.', 'null': 'location is required.'}, max_length=10, validators=[webaccount.models.phoneNumberValidator], verbose_name='Contact Number')),
                ('Number_of_branches', models.IntegerField(default=1, error_messages={'blank': 'Number of Branches can not be left as blank.', 'null': 'Number of Branches Field is not entered'}, validators=[webaccount.models.integerValidator], verbose_name='Number of Branches')),
                ('Number_of_employees', models.IntegerField(default=1, error_messages={'blank': 'Number of Employees can not be left as blank.', 'null': 'Number of Employees Field is not entered'}, validators=[webaccount.models.integerValidator], verbose_name='Number of Employees')),
                ('QR_code', models.FileField(upload_to='')),
                ('Services', models.CharField(error_messages={'blank': 'Services can not be left as blank.', 'null': 'Services Field is not entered'}, max_length=300, verbose_name='Services')),
                ('Number_of_subaccounts', models.IntegerField(default=0, error_messages={'blank': 'Number of Sub-Accounts can not be left as blank.', 'null': 'Number of Sub-Accounts Field is not entered'}, validators=[webaccount.models.integerValidatorAccounts], verbose_name='Number of Sub-Accounts')),
                ('package_price', models.IntegerField(default=0, error_messages={'blank': 'Package Price can not be left as blank.', 'null': 'Package Price Field is not entered'}, validators=[webaccount.models.integerValidatorAccounts], verbose_name='Package Price')),
                ('paymenStatus', models.CharField(choices=[('Pending', 'Pending'), ('Overdue', 'Overdue'), ('Declined', 'Declined'), ('Paid', 'Paid')], default='Pending', error_messages={'blank': 'Subscription Status can not be left as blank.', 'null': 'Subscription Status Field is not entered'}, max_length=15, verbose_name='Subscription Status')),
                ('status', models.CharField(choices=[('New', 'New'), ('Active', 'Active'), ('Pending', 'Pending'), ('Completed', 'Completed'), ('Disabled', 'Disabled')], default='New', max_length=10, verbose_name='Status')),
                ('last_update', models.DateTimeField(auto_now_add=True, verbose_name='Last Update')),
                ('managerRelational', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='RM')),
            ],
            options={
                'verbose_name': 'Client Personal Information',
                'verbose_name_plural': 'Client Personal Information',
            },
        ),
        migrations.CreateModel(
            name='ConsultantModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(default=None, error_messages={'blank': 'Name is required', 'unique': 'Name Already Exists.'}, max_length=100, unique=True, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Consultation',
                'verbose_name_plural': 'Consultations',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Required_Documents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=300)),
                ('file_type', models.CharField(choices=[('pdf', 'pdf'), ('docs', 'docs'), ('image', 'image')], max_length=300, verbose_name='File Type')),
            ],
            options={
                'verbose_name': 'Required Document',
                'verbose_name_plural': 'Required Documents',
            },
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(default='', max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='relationManager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ConsulatationRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('explanation', models.TextField(default=None, error_messages={'blank': 'Explanation is Rquired.'}, max_length=200, verbose_name='Explanation')),
                ('created_timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Consultation Date & Time')),
                ('status', models.CharField(choices=[('New', 'New'), ('Confirmed', 'Confirmed'), ('Pending', 'Pending'), ('Completed', 'Completed'), ('Close', 'Close'), ('Rejected', 'Rejected')], default='New', max_length=100, verbose_name='Status')),
                ('price', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=10, null=True, verbose_name='Price')),
                ('update_timestamp', models.DateTimeField(auto_now_add=True)),
                ('client_paid', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=10, max_length=100, null=True, verbose_name='Client Paid Amound')),
                ('client_paid_all_amount', models.BooleanField(default=False, verbose_name='Paid All Amount')),
                ('feedbackFile', models.FileField(blank=True, upload_to='uploads/feedback/%Y/%m/%d/', verbose_name='Feedback Document')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webaccount.Client_Personal_Info')),
                ('consultant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webaccount.ConsultantModel')),
            ],
            options={
                'verbose_name': 'Consultation Request',
                'verbose_name_plural': 'Consultation Requests',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='clientReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reportType', models.CharField(choices=[('Income Statement', 'Income Statement'), ('Balance Sheet', 'Balance Sheet'), ('VAT Report', 'VAT Report'), ('Ratio Analysis Report', 'Ratio Analysis Report')], default='Income Statement', max_length=25)),
                ('dateYear', models.IntegerField(choices=[(2025, 2025), (2024, 2024), (2023, 2023), (2022, 2022), (2021, 2021), (2020, 2020), (2019, 2019), (2018, 2018), (2017, 2017), (2016, 2016), (2015, 2015), (2014, 2014), (2013, 2013), (2012, 2012), (2011, 2011), (2010, 2010), (2009, 2009), (2008, 2008), (2007, 2007), (2006, 2006), (2005, 2005), (2004, 2004), (2003, 2003), (2002, 2002), (2001, 2001), (2000, 2000), (1999, 1999), (1998, 1998), (1997, 1997), (1996, 1996), (1995, 1995), (1994, 1994), (1993, 1993), (1992, 1992), (1991, 1991), (1990, 1990), (1989, 1989), (1988, 1988), (1987, 1987), (1986, 1986), (1985, 1985), (1984, 1984), (1983, 1983), (1982, 1982), (1981, 1981)], default=2020, validators=[django.core.validators.MinValueValidator(1980), django.core.validators.MaxValueValidator(2025)], verbose_name='Year')),
                ('month_quarterType', models.CharField(choices=[('JANUARY', 'JANUARY'), ('FEBRUARY', 'FEBRUARY'), ('MARCH', 'MARCH'), ('APRIL', 'APRIL'), ('MAY', 'MAY'), ('JUNE', 'JUNE'), ('JULY', 'JULY'), ('AUGUST', 'AUGUST'), ('SEPTEMBER', 'SEPTEMBER'), ('OCTOBER', 'OCTOBER'), ('NOVEMBER', 'NOVEMBER'), ('DECEMBER', 'DECEMBER'), ('Q1', 'Q1'), ('Q2', 'Q2')], default=4, max_length=20, verbose_name='Month or Quarter')),
                ('finalReportIssueDate', models.DateField(default=django.utils.timezone.now, verbose_name='Final Report Issue Date')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webaccount.Client_Personal_Info')),
            ],
            options={
                'verbose_name': 'Client Report',
                'verbose_name_plural': 'Client Reports',
            },
        ),
        migrations.CreateModel(
            name='clientInvoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submittingDate', models.DateField(default=django.utils.timezone.now, verbose_name='Submitting Date')),
                ('statusType', models.CharField(choices=[('New', 'New'), ('Approved', 'Approved'), ('Rejected', 'Rejected'), ('Processing', 'Processing'), ('Pending', 'Pending')], default='New', max_length=15, verbose_name='Status')),
                ('lastUpdate', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Last Update')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webaccount.Client_Personal_Info')),
            ],
            options={
                'verbose_name': 'Client Invoice',
                'verbose_name_plural': 'Client Invoices',
            },
        ),
        migrations.AddField(
            model_name='client_personal_info',
            name='sector',
            field=models.ForeignKey(error_messages={'blank': 'Sector can not be left as blank.', 'null': 'Sector Field is not selected'}, on_delete=django.db.models.deletion.CASCADE, to='webaccount.Sector', validators=[webaccount.models.checkIntegrityError], verbose_name='Sector'),
        ),
    ]
